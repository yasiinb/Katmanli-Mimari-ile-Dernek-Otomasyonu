// <auto-generated />
using System;
using DernekOtomasyonu.DAL.Concrete.EntityFramework;
using EntityFrameworkCore.Jet.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DernekOtomasyonu.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Aidat", b =>
                {
                    b.Property<int>("AidatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AidatMiktar")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AidatTarih")
                        .HasColumnType("datetime");

                    b.HasKey("AidatID");

                    b.ToTable("Aidats");
                });

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Etkinlik", b =>
                {
                    b.Property<int>("EtkinlikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EtkinlikAciklamasi")
                        .HasColumnType("longchar");

                    b.Property<string>("EtkinlikAdi")
                        .HasColumnType("longchar");

                    b.Property<DateTime>("EtkinlikTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("EtkinlikID");

                    b.ToTable("Etkinliks");
                });

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Odemeler", b =>
                {
                    b.Property<int>("OdemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AidatID")
                        .HasColumnType("integer");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("UyeTC")
                        .HasColumnType("longchar");


                    b.HasKey("OdemeID");

                    b.HasIndex("AidatID");

                    b.HasIndex("UyeTC");

                    b.ToTable("Odemelers");
                });

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Personel", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonelAd")
                        .HasColumnType("longchar");

                    b.Property<string>("PersonelKullaniciAdi")
                        .HasColumnType("longchar");

                    b.Property<string>("PersonelMail")
                        .HasColumnType("longchar");

                    b.Property<string>("PersonelSifre")
                        .HasColumnType("longchar");

                    b.Property<string>("PersonelSoyad")
                        .HasColumnType("longchar");

                    b.Property<string>("PersonelTelefon")
                        .HasColumnType("longchar");

                    b.Property<int>("PersonelYetki")
                        .HasColumnType("integer");

                    b.HasKey("PersonelID");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Uye", b =>
                {
                    b.Property<string>("UyeTC")
                        .HasColumnType("longchar");

                    b.Property<bool>("AktifDurum")
                        .HasColumnType("smallint");

                    b.Property<int>("KalanAidat")
                        .HasColumnType("integer");

                    b.Property<string>("Kangurubu")
                        .HasColumnType("longchar");

                    b.Property<DateTime>("KatilimTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Sehir")
                        .HasColumnType("longchar");

                    b.Property<string>("UyeAdi")
                        .HasColumnType("longchar");

                    b.Property<int>("UyeID")
                     .HasColumnType("integer")
                     .ValueGeneratedOnAdd();
      

                    b.Property<string>("UyeMail")
                        .HasColumnType("longchar");

                    b.Property<string>("UyeSoyadi")
                        .HasColumnType("longchar");

                    b.Property<string>("UyeTelefonNo")
                        .HasColumnType("longchar");

                    b.HasKey("UyeTC");

                    b.ToTable("Uyes");
                });

            modelBuilder.Entity("DernekOtomasyonu.Entities.Concrete.Odemeler", b =>
                {
                    b.HasOne("DernekOtomasyonu.Entities.Concrete.Aidat", "Aidat")
                        .WithMany("odemelers")
                        .HasForeignKey("AidatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DernekOtomasyonu.Entities.Concrete.Uye", "Uye")
                        .WithMany("odemelers")
                        .HasForeignKey("UyeTC");
                });
#pragma warning restore 612, 618
        }
    }
}
